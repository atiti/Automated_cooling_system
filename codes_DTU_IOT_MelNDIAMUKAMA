/*
IMPORTANT NOTE about TembooAccount.h

TembooAccount.h contains My Temboo account information and must be included
alongside My sketch. To do so, make a new tab in Arduino, call it TembooAccount.h,
and copy this content into it. 
*/

#define TEMBOO_ACCOUNT "ndiamukama"  // My Temboo account name 
#define TEMBOO_APP_KEY_NAME "myFirstApp"  // My Temboo app key name
#define TEMBOO_APP_KEY "Et7PGBOsnLEYApqUruSkgEP7IEKHLACO"  // My Temboo app key

/* 
The same TembooAccount.h file settings can be used for all Temboo SDK sketches.  
Keeping My account information in a separate file means you can share the 
main .ino file without worrying that you forgot to delete My credentials.
*/
#include <Bridge.h>
#include <Temboo.h>
#include "TembooAccount.h" // contains Temboo account information, as described below

int numRuns = 1;   // Execution count, so this doesn't run forever
int maxRuns = 10;   // Maximum number of times the Choreo should be executed

#include <Bridge.h>
#include <Temboo.h>
#include "utility/TembooGPIO.h"
#include "TembooAccount.h" // Contains Temboo account information  
 
// We limit this so you won't use all of My Temboo calls while testing
int maxCalls = 10;

// The number of times this Choreo has been run so far in this sketch
int calls = 0;

// Declaring sensor configs
TembooGPIOConfig actuatorA0Config;

// Declaring TembooSensors
TembooSensor actuatorA0;

int LED[] = {11,12,13};
int POTENTIOMETER = A0;
int MOTOR=10;
int potval = 0;
float potvolt=0;

void setup() {
  Serial.begin(9600);
  pinMode(A1, INPUT);
  for(int i=0; i<3; i++){
    pinMode(LED[i], OUTPUT);
  }
  pinMode(POTENTIOMETER, INPUT);
  pinMode(MOTOR, OUTPUT);
  potval = analogRead(POTENTIOMETER);
  Serial.begin(9600);
  //Serial.println(potval);

   Serial.begin(9600);

  // For debugging, wait until the serial console is connected
  delay(4000);
  while(!Serial);
  Bridge.begin();
  
  // Initialize sensors and configs
  tembooDigitalGPIOInit(&actuatorA0Config, &actuatorA0, A0, LOW, OUTPUT);

  Serial.println("Setup complete.\n");

  Serial.begin(9600);
  
  // For debugging, wait until the serial console is connected
  delay(4000);
  while(!Serial);
  Bridge.begin();
}

void loop() {
  potval = analogRead(POTENTIOMETER);
  //Serial.println(potval);
  //max=1023, 5V. 204 per Volt.
  //max=1023, 3V. 341 per Volt.
  int onevolt = 1023/5.0;
  potvolt = potval/(float)onevolt;
  int motorvolt = constrain( ((potvolt)*onevolt)/4, 0, 255/5*3);
 // analogWrite(MOTOR, motorvolt);
  Serial.print(potvolt);
  Serial.println(" V");
  Serial.println(motorvolt);
  Serial.println(motorvolt*4/(float)onevolt);
  //analogWrite(MOTOR, 100);
  //digitalWrite(9, LOW);
  //Serial.println(HIGH);
  //delay(1000);

    int tempvolt = analogRead(A1);
  float tempmv = tempvolt * (5000/1024);
  float temp = tempmv/10;
  //Serial.println(tempmv);
  digitalWrite(LED[0], LOW);
  digitalWrite(LED[1], LOW);
  digitalWrite(LED[2], LOW);
 
  if(temp<25){
    digitalWrite(LED[0], HIGH);
    analogWrite(MOTOR, 0);
    Serial.println("Running SendEmail - Run #" + String(numRuns++));
    
    TembooChoreo SendEmailChoreo;

    // Invoke the Temboo client
    SendEmailChoreo.begin();

    // Set Temboo account credentials
    SendEmailChoreo.setAccountName(TEMBOO_ACCOUNT);
    SendEmailChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);
    SendEmailChoreo.setAppKey(TEMBOO_APP_KEY);
    
    // Set Choreo inputs
    SendEmailChoreo.addInput("Username", "ndiamukama@gmail.com");
    SendEmailChoreo.addInput("ToAddress", "ndiamukama@gmail.com");
    SendEmailChoreo.addInput("Subject", "Automated cooling system_DTU_IOT_Programming :)");
    SendEmailChoreo.addInput("Password", "amboooqrsrnflddi");
    SendEmailChoreo.addInput("MessageBody", "There change of temperature in the room. It's less than 25 celcius. Hence AC/Fan is OFF");
    
    // Identify the Choreo to run
    SendEmailChoreo.setChoreo("/Library/Google/Gmail/SendEmail");
    
    // Run the Choreo; when results are available, print them to serial
    SendEmailChoreo.run();
    
    while(SendEmailChoreo.available()) {
      char c = SendEmailChoreo.read();
      Serial.print(c);
    }
    SendEmailChoreo.close();
  }
  else if(temp>25){
    digitalWrite(LED[1], HIGH);
    analogWrite(MOTOR, 150);
    Serial.println("Running SendEmail - Run #" + String(numRuns++));
    
    TembooChoreo SendEmailChoreo;

    // Invoke the Temboo client
    SendEmailChoreo.begin();

    // Set Temboo account credentials
    SendEmailChoreo.setAccountName(TEMBOO_ACCOUNT);
    SendEmailChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);
    SendEmailChoreo.setAppKey(TEMBOO_APP_KEY);
    
    // Set Choreo inputs
    SendEmailChoreo.addInput("Username", "ndiamukama@gmail.com");
    SendEmailChoreo.addInput("ToAddress", "ndiamukama@gmail.com");
    SendEmailChoreo.addInput("Subject", "Automated cooling system_DTU_IOT_Programming :)");
    SendEmailChoreo.addInput("Password", "amboooqrsrnflddi");
    SendEmailChoreo.addInput("MessageBody", "There change of temperature in the room. It's greater than 25 celcius. Hence AC/Fan is ON");
    
    // Identify the Choreo to run
    SendEmailChoreo.setChoreo("/Library/Google/Gmail/SendEmail");
    
    // Run the Choreo; when results are available, print them to serial
    SendEmailChoreo.run();
    
    while(SendEmailChoreo.available()) {
      char c = SendEmailChoreo.read();
      Serial.print(c);
    }
    SendEmailChoreo.close();
  }
  else{
    digitalWrite(LED[2], HIGH);
  }
  Serial.println(temp);
  delay(1000);
  
  Serial.println("Waiting...");
  delay(30000); // wait 30 seconds between SendEmail calls
}
